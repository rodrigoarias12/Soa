#!/bin/bash

AYUDA="AYUDA\n=====\n
	   Modo de uso del script:\n1- ./rankingGoles.sh -a -d [path de proyecto] -f [path de salida]\n
	   2- ./dependencias.sh -c [nombreDeClase] -d [path de proyecto] -f [path de salida]\n
	   3- .dependencias.sh -?\nMuestra la ayuda del script\n
	   El path de salida es opcional en todos los casos [-f], de lo contrario sólo se mostrará por pantalla.\n"

function error () {
	if test $1 -eq 0; then
		echo -e "La cantidad de parámetros es incorrecta."
	elif test $1 -eq 1; then
		echo -e "Las opciones a y c no pueden ir juntas."
	elif test $1 -eq 2; then
		echo  -e "El parámetro -f no es un archivo de texto valido."
	elif test $1 -eq 3; then
		echo  -e "El parámetro de f no es un directorio."
	elif test $1 -eq 4; then
		echo -e "Se esperaba la opcion -? o más opciones."
	elif test $1 -eq 5; then
		echo -e "El formato del archivo no corresponde con el esperado."
	fi
	echo -e $AYUDA
}

#Chequeo de parámetros mínimos requeridos
if test $# -eq 0 || test $# -gt 2; then
	error 0
	exit 1
fi



#función valida la existencia del archivo
function es_archivo_valido (){
    if test -e $1 ; then
        echo 1
    else
	echo 0
    fi
}

#Valida que los parametros sean validos
estadoArchivo=$(es_archivo_valido)
echo $estadoArchivo
if test $# -eq 1 ; then
	if test "$1"!="-?" && test "$1"!="-h" && test "$1"!="-help" && test "$1"!="-h" && test $estadoArchivo -eq 0; then
		error 4;
		exit 1;
	fi
fi


#Valida el formato del archivo de entrada
#La variable estadoArchivo tendrá el valor cero si al menos una fila del archivo no cumple con el formato esperado
awk 	'
		BEGIN{
			estadoArchivo=1;			
		}
		{ print "TODO:Validacion con expresiones Regulares"}		
		END{
			print estadoArchivo;		
		}' input.txt > estadoArchivo
if test $estadoArchivo -eq 0; then
	error 5
	exit 1
fi

#awk Suma los goles por jugador y los devuelve en un vector asociativo
# la clave del vector es el nombre completo y el valor es la cantidad de goles
awk '$1 ~/^[0-9]/ {
            clave=""
            for(i=2;i<NF;i++)
            {
              if(i<4)
                clave=clave $(i);
              else
                clave=clave " " $(i);
            }
            goles[clave]+=$(NF)
          }
	END {
		print "Jugador		Total"			
		for (jugador in goles) { 
			print goles[jugador] " " jugador;
	}   
}' input.txt | sort -k1r,1 -k2n,2; #el orden lo realiza el bash, ordena la cantidad de goles descendente y los nombres ascendentes
